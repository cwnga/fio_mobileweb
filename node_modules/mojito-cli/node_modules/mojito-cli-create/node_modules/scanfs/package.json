{
  "name": "scanfs",
  "version": "0.1.1",
  "description": "Walks filesystem breadth-first, emitting events on the way.",
  "main": "index.js",
  "dependencies": {},
  "devDependencies": {
    "tap": "~0.4.1"
  },
  "scripts": {
    "lint": "jshint *.js*",
    "test": "node tests",
    "cover": "istanbul cover --dir artifacts/coverage tests",
    "plato": "plato -d artifacts/plato *.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/isao/scanfs.git"
  },
  "author": {
    "name": "Isao Yagi",
    "email": "isao@yahoo-inc.com"
  },
  "license": "MIT",
  "keywords": [
    "filesystem",
    "walk",
    "find",
    "traverse"
  ],
  "readme": "scanfs [![Build Status](https://travis-ci.org/isao/scanfs.png)](https://travis-ci.org/isao/scanfs)\n======\n\nA small library that does a breadth-first walk of the filesystem, and emits events on the way.\n\ninstall\n-------\n    npm i --save scanfs\n\nusage\n-----\nSee [`./examples/`](./examples/).\n\nlimitations\n-----------\nUses `fs.stat()` so symlinks are not distinguished and cycles are not detected.\n\ntest\n----\n    npm test\n\nTests use Isaac Schlueter's [tap](https://github.com/isaacs/node-tap) test harness. If you have Krishnan Anantheswaran's [istanbul](https://github.com/gotwarlost/istanbul/), or Jarrod Overson's [plato](https://github.com/jsoverson/plato) installed globally you can do these things too, respectively:\n\n    npm run cover\n    npm run plato\n\nlicense\n-------\nMIT licensed by permission from my employer. See LICENSE.txt.\n",
  "readmeFilename": "README.md",
  "_id": "scanfs@0.1.1",
  "_from": "scanfs@~0.1.0"
}
